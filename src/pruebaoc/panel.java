/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pruebaoc;

import conexionSQL.conexionSQL;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jesus Adrian Bautista Espejel
 */
public class panel extends javax.swing.JFrame {
conexionSQL cc= new conexionSQL();
Connection con=cc.conexion();

    public panel() { 
        initComponents();  
        this.setLocationRelativeTo(null);
       this.getContentPane().setBackground(getBackground());
       mostrarTickets();
        mostrarTicketsN();
        mostrarTicketsP();
        mostrarTicketsA();
      
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNombreTicket = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtResponsable = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cbEquipo = new javax.swing.JComboBox();
        btnNuevo = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        cbGravedad = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        txtVS = new javax.swing.JTextField();
        txtDesc = new java.awt.TextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cbIncidencia = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        cbEstatus = new javax.swing.JComboBox();
        jLabel17 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaTickets = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        txtBus = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableNuevo = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableProceso = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tableAtendido = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        btnArchivados = new javax.swing.JButton();
        btnVerTodos = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ADMINISTRACION DE TICKETS OC", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 13))); // NOI18N

        jLabel1.setText("Titulo de Ticket:");

        txtNombreTicket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreTicketActionPerformed(evt);
            }
        });

        jLabel2.setText("Responsable:");

        jLabel3.setText("Equipo:");

        cbEquipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Soporte", "Desarrollo", "Atencion a Clientes", " " }));

        btnNuevo.setBackground(new java.awt.Color(0, 255, 0));
        btnNuevo.setForeground(new java.awt.Color(255, 255, 255));
        btnNuevo.setText("NUEVO");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnGuardar.setBackground(new java.awt.Color(51, 0, 0));
        btnGuardar.setForeground(new java.awt.Color(255, 255, 255));
        btnGuardar.setText("GUARDAR");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnEliminar.setBackground(new java.awt.Color(255, 0, 0));
        btnEliminar.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminar.setText("ARCHIVAR");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnActualizar.setBackground(new java.awt.Color(51, 255, 0));
        btnActualizar.setForeground(new java.awt.Color(255, 255, 255));
        btnActualizar.setText("ACTUALIZAR TICKET");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        jLabel4.setText("Gravedad:");

        cbGravedad.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Alta", "Media", "Baja" }));

        jLabel5.setText("V. de Software:");

        jLabel6.setText("Descripcion del problema:");

        jLabel7.setText("Incidencia:");

        cbIncidencia.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "BUG", "FEATURE" }));

        jLabel12.setFont(new java.awt.Font("Arial Black", 0, 13)); // NOI18N
        jLabel12.setText("ESTATUS:");

        cbEstatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "NUEVO", "EN PROCESO", "ATENDIDO" }));

        jLabel17.setText("ID:");

        txtID.setEditable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(btnNuevo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnGuardar)
                .addGap(18, 18, 18)
                .addComponent(btnEliminar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnActualizar)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(cbGravedad, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtVS))
                    .addComponent(txtDesc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(txtResponsable))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(cbEquipo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(cbIncidencia, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbEstatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel17))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNombreTicket)
                            .addComponent(txtID))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNombreTicket, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtResponsable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbEquipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(cbIncidencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cbGravedad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtVS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(cbEstatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 211, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNuevo)
                    .addComponent(btnGuardar)
                    .addComponent(btnEliminar)
                    .addComponent(btnActualizar))
                .addContainerGap())
        );

        tablaTickets.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tablaTickets.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaTicketsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaTickets);

        jLabel8.setFont(new java.awt.Font("Bauhaus 93", 0, 13)); // NOI18N
        jLabel8.setText("BUSCAR:");

        txtBus.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBusKeyReleased(evt);
            }
        });

        tableNuevo.setBackground(new java.awt.Color(102, 255, 102));
        tableNuevo.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tableNuevo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tableNuevo.setSelectionBackground(new java.awt.Color(0, 153, 51));
        tableNuevo.setSelectionForeground(new java.awt.Color(51, 255, 51));
        tableNuevo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableNuevoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableNuevo);

        jLabel9.setFont(new java.awt.Font("Bauhaus 93", 1, 13)); // NOI18N
        jLabel9.setText("NUEVOS:");

        tableProceso.setBackground(new java.awt.Color(255, 255, 51));
        tableProceso.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tableProceso.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tableProceso.setSelectionBackground(new java.awt.Color(255, 204, 0));
        tableProceso.setSelectionForeground(new java.awt.Color(51, 51, 0));
        tableProceso.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableProcesoMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tableProceso);

        tableAtendido.setBackground(new java.awt.Color(102, 102, 255));
        tableAtendido.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tableAtendido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tableAtendido.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableAtendidoMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tableAtendido);

        jLabel10.setFont(new java.awt.Font("Bauhaus 93", 1, 13)); // NOI18N
        jLabel10.setText("EN PROCESO:");

        jLabel11.setFont(new java.awt.Font("Bauhaus 93", 1, 13)); // NOI18N
        jLabel11.setText("ATENDIDO:");

        jLabel13.setFont(new java.awt.Font("Bauhaus 93", 0, 18)); // NOI18N
        jLabel13.setText("¡Bienvenido al administrador de Tickets!");

        jLabel14.setText("* Seleccione un elemento de cualquier lista para visualizar sus Datos. Realice cambios y presione \"ACTUALIZAR\" para guardarlos.");

        jLabel15.setText("* LLene los campos y presione guardar para generar el nuevo Ticket. Seleccione un Ticket y presione \"ARCHIVAR\", para que este no aparezca mas.");

        jLabel16.setText("* Presione \"NUEVO\" para generar un nuevo Ticket. Escriba el nombre de un responsable en el siguiente cuadro, para buscar sus Tickets.");

        btnArchivados.setText("VER ARCHIVADOS");
        btnArchivados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArchivadosActionPerformed(evt);
            }
        });

        btnVerTodos.setText("VER TODOS");
        btnVerTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerTodosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBus)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnArchivados)
                                .addGap(18, 18, 18)
                                .addComponent(btnVerTodos)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnArchivados)
                    .addComponent(btnVerTodos))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel10)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNombreTicketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreTicketActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreTicketActionPerformed

   public void insertarDatos(){
   try{
     String SQL= "INSERT INTO tb_tickets (tituloT, responsableT, equipoT, incidenciaT, gravedadT, versionSoftwareT,descT, estatus) VALUES (?,?,?,?,?,?,?,?)";  
     PreparedStatement pst=con.prepareStatement(SQL); 
     pst.setString(1,txtNombreTicket.getText());
     pst.setString(2,txtResponsable.getText());
    
     int seleccionado=cbEquipo.getSelectedIndex();
     pst.setString(3, (String) cbEquipo.getItemAt(seleccionado));
     
     int seleccionadoI=cbIncidencia.getSelectedIndex();
     pst.setString(4, (String) cbIncidencia.getItemAt(seleccionado));
     
     
     int seleccionadoG=cbGravedad.getSelectedIndex();
     pst.setString(5, (String) cbGravedad.getItemAt(seleccionadoG));
     pst.setString(6,txtVS.getText());
     pst.setString(7,txtDesc.getText());
      pst.setString(8,"NUEVO");
     
     
     pst.execute();
     
     JOptionPane.showMessageDialog(null,"REGISTRADO");
   } catch(Exception e){ 
       JOptionPane.showMessageDialog(null,"Error"+e.getMessage());
       
   }
   }
   
   
     public void actualizarDatos(){
         
 String tid = txtID.getText();
   try{
     String SQL= "UPDATE tb_tickets SET tituloT=?, responsableT=?, equipoT=?, incidenciaT=?, gravedadT=?, versionSoftwareT=?,descT=?, estatus=? WHERE id=?"; 
     
    
     PreparedStatement pst=con.prepareStatement(SQL); 
     pst.setString(1,txtNombreTicket.getText());
     pst.setString(2,txtResponsable.getText());
    
     int seleccionado=cbEquipo.getSelectedIndex();
     pst.setString(3, (String) cbEquipo.getItemAt(seleccionado));
     
     int seleccionadoI=cbIncidencia.getSelectedIndex();
     pst.setString(4, (String) cbIncidencia.getItemAt(seleccionado));
     
     
     int seleccionadoG=cbGravedad.getSelectedIndex();
     pst.setString(5, (String) cbGravedad.getItemAt(seleccionadoG));
     pst.setString(6,txtVS.getText());
     
   
     
     pst.setString(7,txtDesc.getText());
       int seleccionadoE=cbEstatus.getSelectedIndex();
     pst.setString(8, (String) cbEstatus.getItemAt(seleccionadoE));
     
     
       pst.setString(9,tid);
     
     
     pst.execute();
     
     JOptionPane.showMessageDialog(null,"ACTUALIZACION EXITOSA");
   } catch(Exception e){ 
       JOptionPane.showMessageDialog(null,"Error"+e.getMessage());
       
   }
   }
     
     public void eliminarDatos(){
    
     String tid = txtID.getText();
     try{
         String SQL="UPDATE tb_tickets SET archivado ='SI' WHERE id="+tid;
         Statement st=con.createStatement();
         int n=st.executeUpdate(SQL);
         
         if(n>=0){
         JOptionPane.showMessageDialog(null, "TICKET ARCHIVADO");
         }
     }catch(Exception e){
         JOptionPane.showMessageDialog(null, "ERROR"+e);
     } 
     
     }
   
   public void limpiarCampos(){
       txtID.setText("");
       txtNombreTicket.setText("");
       txtResponsable.setText("");
       cbEquipo.setSelectedItem(null);
        cbIncidencia.setSelectedItem(null);
       cbGravedad.setSelectedItem(null);
       txtVS.setText("");
       txtDesc.setText("");
       cbEstatus.setSelectedItem(null);
       
   
   }
    
    
    
    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
limpiarCampos();        
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        insertarDatos();
        limpiarCampos();
        mostrarTickets();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void tablaTicketsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaTicketsMouseClicked
       int filaSelec = tablaTickets.rowAtPoint(evt.getPoint());
        txtID.setText(tablaTickets.getValueAt(filaSelec, 0).toString());
         txtNombreTicket.setText(tablaTickets.getValueAt(filaSelec, 1).toString());
         txtResponsable.setText(tablaTickets.getValueAt(filaSelec, 3).toString());
         cbEquipo.setSelectedItem(tablaTickets.getValueAt(filaSelec,4).toString());
         cbIncidencia.setSelectedItem(tablaTickets.getValueAt(filaSelec,5).toString());
         cbGravedad.setSelectedItem(tablaTickets.getValueAt(filaSelec,6).toString());
          txtVS.setText(tablaTickets.getValueAt(filaSelec, 7).toString());
          txtDesc.setText(tablaTickets.getValueAt(filaSelec, 8).toString());
          cbEstatus.setSelectedItem(tablaTickets.getValueAt(filaSelec,9).toString());
          
          
    }//GEN-LAST:event_tablaTicketsMouseClicked

      
    
    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        actualizarDatos();
        limpiarCampos();
        mostrarTickets();
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
eliminarDatos();
limpiarCampos();
mostrarTickets();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void txtBusKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusKeyReleased
       filtrarTickets(txtBus.getText());
    }//GEN-LAST:event_txtBusKeyReleased

    private void tableNuevoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableNuevoMouseClicked
                                 
 int filaSelecN = tableNuevo.rowAtPoint(evt.getPoint());
 txtID.setText(tableNuevo.getValueAt(filaSelecN, 0).toString());
 String tid = txtID.getText();
 String SQLn ="SELECT * from tb_tickets WHERE id ='"+tid+"' ";

try{
    
Statement stN=con.createStatement();
ResultSet rsN = stN.executeQuery(SQLn);

while(rsN.next()){
    txtNombreTicket.setText(rsN.getString("tituloT"));
 txtResponsable.setText(rsN.getString("responsableT"));
 cbEquipo.setSelectedItem(rsN.getString("equipoT"));
         cbIncidencia.setSelectedItem(rsN.getString("incidenciaT"));
         cbGravedad.setSelectedItem(rsN.getString("gravedadT"));
          txtVS.setText(rsN.getString("versionSoftwareT"));
          txtDesc.setText(rsN.getString("descT"));
          cbEstatus.setSelectedItem(rsN.getString("estatus"));

} 

    }//GEN-LAST:event_tableNuevoMouseClicked
/*
    private void tableAtendidoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableAtendidoMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tableAtendidoMouseClicked

    private void btnArchivadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArchivadosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnArchivadosActionPerformed

    private void btnVerTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerTodosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnVerTodosActionPerformed
*/
    catch(Exception e){
         
    }  
    
 }
    
     private void tableProcesoMouseClicked(java.awt.event.MouseEvent evt) {                                        
                                        
 int filaSelecP = tableProceso.rowAtPoint(evt.getPoint());
 txtID.setText(tableProceso.getValueAt(filaSelecP, 0).toString());
 String tid = txtID.getText();
 
 String SQLp ="SELECT * from tb_tickets WHERE id ='"+tid+"' ";

try{
    
Statement stP=con.createStatement();
ResultSet rsP = stP.executeQuery(SQLp);

while(rsP.next()){
       txtNombreTicket.setText(rsP.getString("tituloT"));
 txtResponsable.setText(rsP.getString("responsableT"));
 cbEquipo.setSelectedItem(rsP.getString("equipoT"));
         cbIncidencia.setSelectedItem(rsP.getString("incidenciaT"));
         cbGravedad.setSelectedItem(rsP.getString("gravedadT"));
          txtVS.setText(rsP.getString("versionSoftwareT"));
          txtDesc.setText(rsP.getString("descT"));
           cbEstatus.setSelectedItem(rsP.getString("estatus"));

} 

    }                                       

    catch(Exception e){
         
    } 
     
     }
     

     
 private void tableAtendidoMouseClicked(java.awt.event.MouseEvent evt) {                                        
                                    
 int filaSelecA = tableAtendido.rowAtPoint(evt.getPoint());
 txtID.setText(tableAtendido.getValueAt(filaSelecA, 0).toString());
 String tid = txtID.getText();
 
 String SQLa ="SELECT * from tb_tickets WHERE id ='"+tid+"' ";

try{
    
Statement stA=con.createStatement();
ResultSet rsA = stA.executeQuery(SQLa);

while(rsA.next()){
       txtNombreTicket.setText(rsA.getString("tituloT"));
 txtResponsable.setText(rsA.getString("responsableT"));
 cbEquipo.setSelectedItem(rsA.getString("equipoT"));
         cbIncidencia.setSelectedItem(rsA.getString("incidenciaT"));
         cbGravedad.setSelectedItem(rsA.getString("gravedadT"));
          txtVS.setText(rsA.getString("versionSoftwareT"));
          txtDesc.setText(rsA.getString("descT"));
           cbEstatus.setSelectedItem(rsA.getString("estatus"));

} 

    }                                       

    catch(Exception e){
         
    }
     
     }
    
    
    private void btnArchivadosActionPerformed(java.awt.event.ActionEvent evt) {                                              
        mostrarTicketsArchivados();
    }                                             
 private void btnVerTodosActionPerformed(java.awt.event.ActionEvent evt) {                                            
       mostrarTickets();
    }    
     
     
     
     
    
    
    
// SECCION DE MANEJO DE DATOS
    public void mostrarTickets(){
String[] titulos = {"ID", "TITULO", "FECHA", "RESPONSABLE", "EQUIPO ENCARGADO",
    "INCIDENCIA", "GRAVEDAD", "VERSION SOFTWARE", "DESCRIPCION", "ARCHIVOS ADJUNTOS","ESTATUS"};
String[] registros = new String[11] ;

DefaultTableModel modelo = new DefaultTableModel(null, titulos);

String SQL ="SELECT * from tb_tickets WHERE archivado ='NO' ORDER BY fechaT DESC";

try{
    
Statement st=con.createStatement();
ResultSet rs = st.executeQuery(SQL);

while(rs.next()){
registros[0]=rs.getString("id");
registros[1]=rs.getString("tituloT");
registros[2]=rs.getString("fechaT");
registros[3]=rs.getString("responsableT");
registros[4]=rs.getString("equipoT");
registros[5]=rs.getString("incidenciaT");
registros[6]=rs.getString("gravedadT");
registros[7]=rs.getString("versionSoftwareT");
registros[8]=rs.getString("descT");
registros[9]=rs.getString("estatus");

modelo.addRow(registros);


}

tablaTickets.setModel(modelo);
}   
catch(Exception e){
    JOptionPane.showMessageDialog(null,e);

}

mostrarTicketsN();
mostrarTicketsP();
mostrarTicketsA();
 
}
    
    public void mostrarTicketsArchivados(){
String[] titulos = {"ID", "TITULO", "FECHA", "RESPONSABLE", "EQUIPO ENCARGADO",
    "INCIDENCIA", "GRAVEDAD", "VERSION SOFTWARE", "DESCRIPCION", "ARCHIVOS ADJUNTOS","ESTATUS"};
String[] registros = new String[11] ;

DefaultTableModel modelo = new DefaultTableModel(null, titulos);

String SQL ="SELECT * from tb_tickets WHERE archivado ='SI' ORDER BY fechaT DESC";

try{
    
Statement st=con.createStatement();
ResultSet rs = st.executeQuery(SQL);

while(rs.next()){
registros[0]=rs.getString("id");
registros[1]=rs.getString("tituloT");
registros[2]=rs.getString("fechaT");
registros[3]=rs.getString("responsableT");
registros[4]=rs.getString("equipoT");
registros[5]=rs.getString("incidenciaT");
registros[6]=rs.getString("gravedadT");
registros[7]=rs.getString("versionSoftwareT");
registros[8]=rs.getString("descT");
registros[9]=rs.getString("estatus");

modelo.addRow(registros);


}

tablaTickets.setModel(modelo);
}   
catch(Exception e){
    JOptionPane.showMessageDialog(null,e);

}

mostrarTicketsN();
mostrarTicketsP();
mostrarTicketsA();
 
}

public void filtrarTickets(String val){
String[] titulos = {"ID", "TITULO", "FECHA", "RESPONSABLE", "EQUIPO ENCARGADO",
    "INCIDENCIA", "GRAVEDAD", "VERSION SOFTWARE", "DESCRIPCION", "ARCHIVOS ADJUNTOS"};
String[] registros = new String[10] ;

DefaultTableModel modelo = new DefaultTableModel(null, titulos);

String SQL ="SELECT * from tb_tickets WHERE responsableT like '%"+val+"%' AND archivado ='NO' ";

try{
    
Statement st=con.createStatement();
ResultSet rs = st.executeQuery(SQL);

while(rs.next()){
registros[0]=rs.getString("id");
registros[1]=rs.getString("tituloT");
registros[2]=rs.getString("fechaT");
registros[3]=rs.getString("responsableT");
registros[4]=rs.getString("equipoT");
registros[5]=rs.getString("incidenciaT");
registros[6]=rs.getString("gravedadT");
registros[7]=rs.getString("versionSoftwareT");
registros[8]=rs.getString("descT");

modelo.addRow(registros);


}

tablaTickets.setModel(modelo);
}   
catch(Exception e){
    JOptionPane.showMessageDialog(null,e);

}
 
}

                                
public void mostrarTicketsN (){
String[] titulos = {"#", "TITULO",
    "INCIDENCIA"};
String[] registrosN = new String[10] ;

DefaultTableModel modeloN = new DefaultTableModel(null, titulos);

String SQL ="SELECT * from tb_tickets WHERE estatus='NUEVO' AND archivado ='NO'  ORDER BY fechaT DESC";

try{
    
Statement st=con.createStatement();
ResultSet rs = st.executeQuery(SQL);

while(rs.next()){
registrosN[0]=rs.getString("id");
registrosN[1]=rs.getString("tituloT");
registrosN[2]=rs.getString("incidenciaT")+"("+rs.getString("gravedadT")+")";


modeloN.addRow(registrosN);


}

tableNuevo.setModel(modeloN);
}   
catch(Exception e){
    JOptionPane.showMessageDialog(null,e);

}
 
}

public void mostrarTicketsP(){
String[] titulos = {"#", "TITULO",
    "INCIDENCIA"};
String[] registrosP = new String[10] ;

DefaultTableModel modeloP = new DefaultTableModel(null, titulos);

String SQL ="SELECT * from tb_tickets WHERE estatus='EN PROCESO' AND archivado ='NO'  ORDER BY fechaT DESC";

try{
    
Statement st=con.createStatement();
ResultSet rs = st.executeQuery(SQL);

while(rs.next()){
registrosP[0]=rs.getString("id");
registrosP[1]=rs.getString("tituloT");
registrosP[2]=rs.getString("incidenciaT")+"("+rs.getString("gravedadT")+")";


modeloP.addRow(registrosP);


}

tableProceso.setModel(modeloP);
}   
catch(Exception e){
    JOptionPane.showMessageDialog(null,e);

}
 
}

public void mostrarTicketsA(){
String[] titulos = {"#", "TITULO",
    "INCIDENCIA"};
String[] registrosA = new String[10] ;

DefaultTableModel modeloA = new DefaultTableModel(null, titulos);

String SQL ="SELECT * from tb_tickets WHERE estatus='ATENDIDO' AND archivado ='NO'  ORDER BY fechaT DESC";

try{
    
Statement st=con.createStatement();
ResultSet rs = st.executeQuery(SQL);

while(rs.next()){
registrosA[0]=rs.getString("id");
registrosA[1]=rs.getString("tituloT");
registrosA[2]=rs.getString("incidenciaT")+"("+rs.getString("gravedadT")+")";


modeloA.addRow(registrosA);


}

tableAtendido.setModel(modeloA);
}   
catch(Exception e){
    JOptionPane.showMessageDialog(null,e);

}
 
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus  look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(panel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(panel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(panel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(panel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new panel().setVisible(true);
            }
        });
    }
    
 // FIN DE SECCION DE MANEJO DE TICKETS Y SUS DATOS

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnArchivados;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnVerTodos;
    private javax.swing.JComboBox cbEquipo;
    private javax.swing.JComboBox cbEstatus;
    private javax.swing.JComboBox cbGravedad;
    private javax.swing.JComboBox cbIncidencia;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable tablaTickets;
    private javax.swing.JTable tableAtendido;
    private javax.swing.JTable tableNuevo;
    private javax.swing.JTable tableProceso;
    private javax.swing.JTextField txtBus;
    private java.awt.TextField txtDesc;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtNombreTicket;
    private javax.swing.JTextField txtResponsable;
    private javax.swing.JTextField txtVS;
    // End of variables declaration//GEN-END:variables
}
